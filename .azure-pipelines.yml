jobs:
  - job: Linux
    pool:
      vmImage: ubuntu-16.04
    strategy:
      matrix:
        node_8_x:
          node_version: 8.x
        node_10_x:
          node_version: 10.x
        node_12_x:
          node_version: 12.x
    steps:
      - template: .azure-pipelines-steps.yml
      # sonar-scanner run only on node 10.x
      - bash: |
          echo "##vso[task.setvariable variable=PACKAGE_VERSION]$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]')"
      - task: SonarCloudPrepare@1
        inputs:
          SonarCloud: "sonarcloud"
          organization: "hoonoh"
          scannerMode: "CLI"
          configMode: "file"
        condition: and(succeeded(), eq(variables['node_version'], '10.x'))
      - task: SonarCloudAnalyze@1
        condition: and(succeeded(), eq(variables['node_version'], '10.x'))
      - task: SonarCloudPublish@1
        inputs:
          pollingTimeoutSec: "300"
        condition: and(succeeded(), eq(variables['node_version'], '10.x'))

  - job: Windows
    pool:
      vmImage: vs2017-win2016
    strategy:
      matrix:
        node_8_x:
          node_version: 8.x
        node_10_x:
          node_version: 10.x
        node_12_x:
          node_version: 12.x
    steps:
      - script: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
        displayName: "Preserve LF endings and symbolic links on check out"
      - template: .azure-pipelines-steps.yml

  - job: macOS
    pool:
      vmImage: macos-10.13
    strategy:
      matrix:
        node_8_x:
          node_version: 8.x
        node_10_x:
          node_version: 10.x
        node_12_x:
          node_version: 12.x
    steps:
      - template: .azure-pipelines-steps.yml

variables:
  CI: true
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn
